{"version":3,"sources":["../../src/component/AudioAnalyser/index.js"],"names":["React","Component","PropTypes","MediaRecorder","RenderCanvas","AudioAnalyser","nextProps","props","status","audioSrc","prevProps","event","inactive","stopAudio","recording","startAudio","paused","pauseAudio","children","className","renderCanvas","defaultProps","backgroundColor","strokeColor","audioBitsPerSecond","mimeType","audioType","audioOptions","width","height","propTypes","string","number","object","timeslice","startCallback","func","pauseCallback","stopCallback","onRecordCallback"],"mappings":";;;;;;;;;;AAAA;;;AAGA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA;;IAIMC,a,GAFLF,a,UACAC,Y;;;;;;;;;;;8CAGyBE,S,EAAW;AAC7B,gBAAI,KAAKC,KAAL,CAAWC,MAAX,IAAqBF,UAAUE,MAA/B,IAAyC,KAAKD,KAAL,CAAWE,QAAX,IAAuBH,UAAUG,QAA9E,EAAwF;AACpF,uBAAO,KAAP;AACH;AACD,mBAAO,IAAP;AACH;;;2CAEkBC,S,EAAW;AAC1B,gBAAI,KAAKH,KAAL,CAAWC,MAAX,KAAsBE,UAAUF,MAApC,EAA4C;AACxC,oBAAMG,QAAQ;AACVC,8BAAU,KAAKC,SADL;AAEVC,+BAAW,KAAKC,UAFN;AAGVC,4BAAQ,KAAKC;AAHH,kBAIZ,KAAKV,KAAL,CAAWC,MAJC,CAAd;AAKAG,yBAASA,OAAT;AACH;AACJ;;AAED;AACA;AACA;;;;iCAES;AAAA,yBAGD,KAAKJ,KAHJ;AAAA,gBAEDW,QAFC,UAEDA,QAFC;AAAA,gBAESC,SAFT,UAESA,SAFT;AAAA,gBAEoBV,QAFpB,UAEoBA,QAFpB;;AAIL,mBACE;AAAA;AAAA,kBAAK,WAAWU,SAAhB;AACI;AAAA;AAAA;AACK,yBAAKC,YAAL;AADL,iBADJ;AAIKF,wBAJL;AAMQT,4BACA;AAAA;AAAA;AACI,mDAAO,cAAP,EAAgB,KAAKA,QAArB;AADJ;AAPR,aADF;AAcH;;;;EA1CuBR,S;;AA6C5BI,cAAcgB,YAAd,GAA6B;AACzBb,YAAQ,EADiB;AAEzBC,cAAU,EAFe;AAGzBa,qBAAiB,kBAHQ;AAIzBC,iBAAa,SAJY;AAKzBJ,eAAW,gBALc;AAMzBK,wBAAoB,MANK;AAOzBC,cAAU,YAPe;AAQzBC,eAAW,YARc;AASzBC,kBAAc,EATW;AAUzBC,WAAO,GAVkB;AAWzBC,YAAQ;AAXiB,CAA7B;AAaAxB,cAAcyB,SAAd,GAA0B;AACtBtB,YAAQN,UAAU6B,MADI;AAEtBtB,cAAUP,UAAU6B,MAFE;AAGtBT,qBAAiBpB,UAAU6B,MAHL;AAItBR,iBAAarB,UAAU6B,MAJD;AAKtBZ,eAAWjB,UAAU6B,MALC;AAMtBP,wBAAoBtB,UAAU8B,MANR;AAOtBN,eAAWxB,UAAU6B,MAPC;AAQtBJ,kBAAczB,UAAU+B,MARF;AAStBL,WAAO1B,UAAU8B,MATK;AAUtBH,YAAQ3B,UAAU8B,MAVI;AAWtBE,eAAWhC,UAAU8B,MAXC;AAYtBG,mBAAejC,UAAUkC,IAZH;AAatBC,mBAAenC,UAAUkC,IAbH;AActBE,kBAAcpC,UAAUkC,IAdF;AAetBG,sBAAkBrC,UAAUkC;AAfN,CAA1B;AAiBA,eAAe/B,aAAf","file":"index.js","sourcesContent":["/**\r\n * Created by j_bleach on 2018/8/1.\r\n */\r\nimport React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MediaRecorder from \"./MediaRecorder\";\r\nimport RenderCanvas from \"./RenderCanvas\";\r\n\r\n// import \"./index.css\";\r\n\r\n@MediaRecorder\r\n@RenderCanvas\r\nclass AudioAnalyser extends Component {\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        if (this.props.status == nextProps.status && this.props.audioSrc == nextProps.audioSrc) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.status !== prevProps.status) {\r\n            const event = {\r\n                inactive: this.stopAudio,\r\n                recording: this.startAudio,\r\n                paused: this.pauseAudio\r\n            }[this.props.status];\r\n            event && event();\r\n        }\r\n    }\r\n\r\n    // render() {\r\n    //     return (<div>233{this.props.status}</div>)\r\n    // }\r\n\r\n    render() {\r\n        const {\r\n            children, className, audioSrc\r\n        } = this.props;\r\n        return (\r\n          <div className={className}>\r\n              <div>\r\n                  {this.renderCanvas()}\r\n              </div>\r\n              {children}\r\n              {\r\n                  audioSrc &&\r\n                  <div>\r\n                      <audio controls src={audioSrc}/>\r\n                  </div>\r\n              }\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nAudioAnalyser.defaultProps = {\r\n    status: \"\",\r\n    audioSrc: \"\",\r\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\r\n    strokeColor: \"#ffffff\",\r\n    className: \"audioContainer\",\r\n    audioBitsPerSecond: 128000,\r\n    mimeType: \"audio/webm\",\r\n    audioType: \"audio/webm\",\r\n    audioOptions: {},\r\n    width: 500,\r\n    height: 100\r\n};\r\nAudioAnalyser.propTypes = {\r\n    status: PropTypes.string,\r\n    audioSrc: PropTypes.string,\r\n    backgroundColor: PropTypes.string,\r\n    strokeColor: PropTypes.string,\r\n    className: PropTypes.string,\r\n    audioBitsPerSecond: PropTypes.number,\r\n    audioType: PropTypes.string,\r\n    audioOptions: PropTypes.object,\r\n    width: PropTypes.number,\r\n    height: PropTypes.number,\r\n    timeslice: PropTypes.number,\r\n    startCallback: PropTypes.func,\r\n    pauseCallback: PropTypes.func,\r\n    stopCallback: PropTypes.func,\r\n    onRecordCallback: PropTypes.func\r\n};\r\nexport default AudioAnalyser;\r\n\r\n"]}